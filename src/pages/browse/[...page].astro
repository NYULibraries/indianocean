---
import DefaultLayout from '../../layouts/DefaultLayout.astro'

export async function getStaticPaths() {
  const collectionCode = 'io'
  const rows = 12
  const start = 1
  const url = `https://discovery1.dlib.nyu.edu/solr/viewer/select?wt=json&q=*&fl=ss_representative_image,bundle,ss_identifier,ss_book_identifier,ss_title,sm_author,sm_publisher,ss_spublisher,ss_pubdate,sm_collection_partner_label,sm_subject_label,ss_publocation,sm_field_publication_location&fq=hash:705lna&fq=sm_collection_code:${collectionCode}&rows=${rows}&start=${start}&sort=ss_ssubject%20asc`
  const pageSize = 15
  const response = await fetch(url)
  const data = await response.json()
	const books = data.response.docs.map((item)=>{
		return {params: {identifier: item.ss_identifier}}
	})
		return books;
}

const { identifier } = Astro.params
const pageTitle = `Page ${identifier}`
const pageDescription = `This is page ${identifier}`


---

<DefaultLayout
  title={pageTitle}
  description={pageDescription}
>
  <header>
    <h2 class="page-title">{pageTitle}</h2>
    <div class="resultsnum">Showing items <span class="start">{start}</span> - <span class="docslength">{rows}</span> of <span class="numfound">{numFound}</span></div>
  <!-- <FilterDropdown/> -->
  </header>
  <div class="widget">
    <div class="item-list flex-container">
    {
      documents.map((document) => (
        <article class="item">
          <div class="card">
            <div class="thumbs">
              <div class="clipper">
                <a href={`${getDocumentTypeByBundle(document.bundle)}/${document.sm_field_identifier}`} aria-hidden="true" role="presentation" tabindex="-1">
                  <img src={`${viewerUrl}/api/image/${getDocumentTypeByBundle(document.bundle)}/${document.sm_field_identifier}/1/full/150,/0/default.jpg`} alt="" title={document.ss_title_long} role="presentation">
                </a>
              </div>
            </div>
            <h1 class="md_title">
              <a href="/book/{document.sm_field_identifier}/1">{document.ss_title_long}</a>
            </h1>
            <div class="md_authors">
              <span class="md_label">Author:</span>
              {
                document.sm_author.map((author) => (
                  <span class="md_author">{author}</span>
                ))
              }
            </div>
            <div class="md_publisher">
              <span class="md_label">Publisher:</span>
              {
                document.sm_field_publication_location.map((location) => (
                  <span>{location}</span>
                ))
              }
              ,
              {
                document.sm_publisher.map((publisher) => (
                  <span>{publisher}</span>
                ))
              }
              , {document.ss_pubdate}
            </div>
          </div>
          <div class="md_provider">
            <span class="md_label">Provider:</span>
            {
              document.sm_collection_partner_label.map((collectionPartner) => (
                <span>{collectionPartner}</span>
              ))
            }
          </div>
          <div class="md_subjects">
            <span class="md_label">Subjects:</span>
            {
              document.sm_subject_label.map((subject) => (
                <a class="md_subject" href={`${appRoot}}/search?q=${subject}`}>{subject}</a>
              ))
            }
          </div>
        </article>
      ))
    }
    <article class="item"></article>
    <article class="item"></article>
    </div>
    <div class="text-center">
      <div id="paginator" class="pagination"></div>
    </div>
  </div>
	<section class="my-12">
    <div class="space-content container">
      <h1>{pageTitle}</h1>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
      <ul class="my-3">
        {
          page.data.map((post) => (
            <li>
              <Card
                url={'/books/' + post.ss_identifier}
                title={post.ss_title}
                footer={'userId:' + post.ss_identifier}
              >
              Author:
              {
                post.sm_author.map((author) => (
                  <p>{author}</p>
                ))
              }
              </Card>
            </li>
          ))
        }
      </ul>
      <div>
        // <Pagination
        //   firstPage={page.url.prev ? '/blog' : null}
        //   previousPage={page.url.prev ? page.url.prev : null}
        //   nextPage={page.url.next ? page.url.next : null}
        //   lastPage={page.url.next ? `/blog/${Math.round(page.total / page.size)}` : null}
        //   currentPage={page.currentPage}
        //   totalPages={Math.round(page.total / page.size)}
        // />
      </div>
    </div>
  </section>
</DefaultLayout>


